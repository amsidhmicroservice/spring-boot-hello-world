# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle-Docker-GKE Build And deployment

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ created ]
  schedule:
    # * is a special character in YAML, so you have to quote this string
    - cron: '30 4,17 * * *'

env:
  BUILD_PUSH_FLAG: false
  GKE_DEPLOY_FLAG: true
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
  GKE_CLUSTER_ZONE: ${{ secrets.GKE_CLUSTER_ZONE }}
  DEPLOYMENT_NAME: ${{ secrets.DEPLOYMENT_NAME }}


jobs:
  prejob:
    name: Initializing environment variable used at build_push and  deploy_gke job level
    runs-on: ubuntu-latest
    outputs:
      BUILD_PUSH_FLAG: ${{ steps.set_job_level_env.outputs.BUILD_PUSH_FLAG }}
      GKE_DEPLOY_FLAG: ${{ steps.set_job_level_env.outputs.GKE_DEPLOY_FLAG }}
    steps:
      - name: set environment variable used at job level
        id: set_job_level_env
        run: |
          echo "::set-output name=BUILD_PUSH_FLAG::$BUILD_PUSH_FLAG"
          echo "::set-output name=GKE_DEPLOY_FLAG::$GKE_DEPLOY_FLAG"


  build_push:
    needs: [ prejob ]
    if: ${{needs.prejob.outputs.BUILD_PUSH_FLAG=='true'}}
    name: Build and Push to docker hub job
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build with Gradle
        run: gradle build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DEPLOYMENT_NAME }}:latest,${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DEPLOYMENT_NAME }}:0.0.1-SNAPSHOT
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy_gke:
    needs: [ prejob, build_push ]
    if: |
      ${{needs.prejob.outputs.GKE_DEPLOY_FLAG=='true'}}
    name: Deploy the application on GKE Cluster using helm chart
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Setup GCloud CLI
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Check gcloud CLI command
        run: gcloud info

      # Get the GKE credentials so we can deploy to the cluster
      - name: Get the GKE credentials
        run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER_NAME" --zone "$GKE_CLUSTER_ZONE" --project "$GCP_PROJECT_ID"

      # This is required to get helm folder from git repository
      - uses: actions/checkout@v2

      # Deploy using helm Charts========================
      - name: Helm Deployment Using builtin github action
        uses: hahow/install-helm-chart-action@v1.0.3
        with:
          context: .
          gcloud_auth_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          gcloud_project_id: ${{ env.GCP_PROJECT_ID }}
          cluster_name: ${{ env.GKE_CLUSTER_NAME }}
          cluster_region: ${{ env.GKE_CLUSTER_ZONE }}
          release_namespace: ${{ secrets.GKE_CLUSTER_NAMESPACE }}
          release_name: ${{ secrets.RELEASE_NAME }}
          chart_name: ./helm/
          helm_upgrade_args: |
            --set image.tag=${{ secrets.IMAGE_TAG }}
      # End Of Deploy using helm Charts========================



